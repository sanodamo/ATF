package org.staw.datarepository;

public enum QueryVars{
	
	/*
	 * Insert - Main Tables
	 */
	
	INSERT_INTO_THREADS("INSERT INTO THREADS (THREAD, P_ID, TESTNAME, BROWSER, BROWSER_VERSION, OS, USERID,HOSTNAME,START_TIMESTAMP) VALUES(?,?,?,?,?,?,?,?,?)"),
	INSERT_INTO_MASTER_TABLE("INSERT INTO MASTER_TABLE (P_ID, KEY_VAL, VAL) VALUES(?,?,?)"),
	INSERT_INTO_STEP_LEVEL_REPORT("INSERT INTO STEP_LEVEL_REPORT (P_ID, TSTAMP, STEP_NUMBER, KEYWORD, PARAMETERS, DESCRIPTION, RESULT) VALUES(?,?,?,?,?,?,?)"),
	INSERT_INTO_REPORT_TABLE("INSERT INTO REPORT_TABLE (P_ID, START_TIME, TOTAL_STEPS, STEPS_PASSED, STEPS_FAILED, TOTAL_EXECUTION_TIME, RESULT, BUILD, CONTENT_VERSION, COOKIE) VALUES(?,?,?,?,?,?,?,?,?,?)"),
	INSERT_INTO_RERUN_TABLE("INSERT INTO RERUN (CURRENT_THREAD, CURRENT_PID, PREVIOUS_PID) VALUES (?,?,?)"),
	INSERT_INTO_JSERROR_TABLE("INSERT INTO JSERROR (P_ID, TSTAMP, URL, JSERROR) VALUES(?,?,?,?)"),
	INSERT_INTO_COOKIES_TABLE("INSERT INTO COOKIES (P_ID, TSTAMP, NAME, DOMAIN, VALUE) VALUES(?,?,?,?,?)"),
	
	UPDATE_THREADS_VALUES("UPDATE THREADS SET TESTNAME=?, BROWSER=?, BROWSER_VERSION=?, OS=? WHERE P_ID=?"),
	UPDATE_THREADS_TESTNAME("UPDATE THREADS SET TESTNAME=? WHERE P_ID=?"),
	UPDATE_THREADS_BROWSER("UPDATE THREADS SET BROWSER=? WHERE P_ID=?"),
	UPDATE_THREADS_BROWSER_VERSION("UPDATE THREADS SET BROWSER_VERSION=? WHERE P_ID=?"),
	UPDATE_THREADS_OS("UPDATE THREADS SET OS=? WHERE P_ID=?"),
	UPDATE_THREADS_USER_ID("UPDATE THREADS SET USERID=? WHERE P_ID=?"),
	UPDATE_THREADS_HOST_NAME("UPDATE THREADS SET HOSTNAME=? WHERE P_ID=?"),
	UPDATE_THREADS_START_TIME("UPDATE THREADS SET START_TIMESTAMP=? WHERE P_ID=?"),
	UPDATE_THREADS_BUILD_FULL_KEY("UPDATE THREADS SET BUILD_FULL_KEY=? WHERE P_ID=?"),
	UPDATE_MASTER_TABLE("UPDATE MASTER_TABLE SET VAL=? WHERE P_ID=? AND KEY_VAL=?"),
	UPDATE_STEP_LEVEL_KEYWORD("UPDATE "
			+ "STEP_LEVEL_REPORT "
			+ "SET "
			+ "KEYWORD=? "
			+ "WHERE "
			+ "P_ID=? "
			+ "AND STEP_NUMBER=?"),
	UPDATE_STEP_LEVEL_PARAMETERS("UPDATE "
			+ "STEP_LEVEL_REPORT "
			+ "SET "
			+ "PARAMETERS=? "
			+ "WHERE "
			+ "P_ID=? "
			+ "AND STEP_NUMBER=?"),
	UPDATE_STEP_LEVEL_DESCRIPTION("UPDATE "
			+ "STEP_LEVEL_REPORT "
			+ "SET "
			+ "DESCRIPTION=? "
			+ "WHERE "
			+ "P_ID=? "
			+ "AND STEP_NUMBER=?"),
	UPDATE_STEP_LEVEL_RESULT("UPDATE "
			+ "STEP_LEVEL_REPORT "
			+ "SET "
			+ "RESULT=? "
			+ "WHERE "
			+ "P_ID=? "
			+ "AND STEP_NUMBER=?"),
	UPDATE_REPORT_TABLE_START_TIME("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "START_TIME=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_TOTAL_STEPS("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "TOTAL_STEPS=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_STEPS_PASSED("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "STEPS_PASSED=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_STEPS_FAILED("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "STEPS_FAILED=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_TOTAL_EXECUTION_TIME("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "TOTAL_EXECUTION_TIME=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_RESULT("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "RESULT=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_BUILD("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "BUILD=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_CONTENT_VERSION("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "CONTENT_VERSION=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_O_COOKIE("UPDATE "
			+ "REPORT_TABLE "
			+ "SET "
			+ "O_COOKIE=? "
			+ "WHERE "
			+ "P_ID=?"),
	UPDATE_REPORT_TABLE_SET_TO_FAILED("UPDATE REPORT_TABLE SET RESULT = 'Failed' WHERE RESULT='N/A'"),
	UPDATE_RERUN_TABLE_CURRENT_PID_WITH_PREVIOUS_PID("UPDATE RERUN SET PREVIOUS_PID=? WHERE CURRENT_PID=?"),
	
	GET_TEST_DATA_BY_KEY("SELECT VALUE FROM TESTDATA WHERE KEY_NAME=?"),
	/*
	 * Get
	 */
	GET_COOKIES_VALUE_BY_COOKIE_AND_PID("SELECT VALUE FROM COOKIES WHERE P_ID=? AND NAME=?"),
	GET_COOKIES_ALL_COOKIES_BY_PID("SELECT NAME, DOMAIN, VALUE FROM COOKIES WHERE P_ID=?"),
	GET_COOKIES_ALL_INFORMATION("SELECT TR.TESTNAME, TR.BROWSER, TR.BROWSER_VERSION, TR.OS, CK.NAME, CK.DOMAIN, CK.VALUE FROM COOKIES CK JOIN THREADS TR ON TR.P_ID=CK.P_ID JOIN BUILD_SCRIPTS BS ON TR.P_ID=BS.P_ID JOIN BUILD BD ON BD.ID=BS.BUILD_ID WHERE BD.BUILD_FULL_KEY=? ORDER BY TR.TESTNAME, TR.BROWSER, TR.BROWSER_VERSION"),
	
	GET_JSERRORS_ALL_INFORMATION("SELECT TR.TESTNAME, TR.BROWSER, TR.BROWSER_VERSION, TR.OS, JSR.TSTAMP, JSR.URL, JSR.JSERROR FROM JSERROR JSR JOIN THREADS TR ON TR.P_ID = JSR.P_ID JOIN BUILD_SCRIPTS BS ON BS.P_ID = TR.P_ID JOIN BUILD BD ON BD.ID=BS.BUILD_ID WHERE BD.BUILD_FULL_KEY = ? ORDER BY TR.P_ID"),
	
	GET_RERUN_TABLE_PREVIOUS_PID_FOR_CURRENT_PID("SELECT PREVIOUS_PID FROM RERUN WHERE CURRENT_PID=?"),
	GET_RERUN_TABLE_ORIGINAL_AND_RERUN_USING_ORIGINAL_PID("SELECT PREVIOUS_PID AS ORIGINAL, CURRENT_PID AS RERUN FROM RERUN WHERE PREVIOUS_PID=?"),
	
	GET_THREADS_TESTNAME("SELECT TESTNAME FROM THREADS WHERE P_ID=?"),
	GET_THREADS_BROWSER("SELECT BROWSER FROM THREADS WHERE P_ID=?"),
	GET_THREADS_BROWSER_VERSION("SELECT BROWSER_VERSION FROM THREADS WHERE P_ID=?"),
	GET_THREADS_OS("SELECT OS FROM THREADS WHERE P_ID=?"),
	GET_THREADS_THREAD("SELECT THREAD FROM THREADS WHERE P_ID=?"),
	GET_THREADS_INFO_BY_PID("SELECT TESTNAME, BROWSER, BROWSER_VERSION, OS FROM THREADS WHERE P_ID=?"),
	GET_MASTER_TABLE_JAVA_SCRIP_ERRORS("SELECT TR.P_ID, TR.TESTNAME, TR.BROWSER, TR.BROWSER_VERSION, TR.OS, MT.KEY_VAL, MT.VAL FROM MASTER_TABLE MT JOIN THREADS TR ON TR.P_ID=MT.P_ID WHERE MT.KEY_VAL='jsErrorIncrementValue' OR MT.KEY_VAL LIKE 'jsErrors%' ORDER BY TR.P_ID"),
	GET_MASTER_TABLE_VALUE("SELECT VAL FROM MASTER_TABLE WHERE P_ID=? AND KEY_VAL=?"),
	GET_MASTER_TABLE_INFO_OF_KEY("SELECT * FROM MASTER_TABLE WHERE KEY_VAL=?"),
	
	
	GET_STEP_LEVEL_REPORT_VALUES_BY_P_ID("SELECT SLT.STEP_NUMBER, SLT.KEYWORD, SLT.PARAMETERS, SLT.DESCRIPTION, SLT.RESULT FROM STEP_LEVEL_REPORT SLT JOIN THREADS TR ON SLT.P_ID = TR.P_ID WHERE TR.P_ID=? ORDER BY TR.TESTNAME, SLT.STEP_NUMBER"),
	GET_STEP_LEVEL_KEYWORD("SELECT "
			+ "KEYWORD "
			+ "FROM " 
			+ "STEP_LEVEL_REPORT "
			+ "WHERE "
			+ "P_ID=? "
			+ "AND STEP_NUMBER=? "),
	GET_STEP_LEVEL_PARAMETERS("SELECT "
			+ "PARAMETERS "
			+ "FROM "
			+ "STEP_LEVEL_REPORT "
			+ "WHERE "
			+ "P_ID=? "
			+ "AND STEP_NUMBER=? "),
	GET_STEP_LEVEL_DESCRIPTION("SELECT "
			+ "DESCRIPTION "
			+ "FROM "
			+ "STEP_LEVEL_REPORT "
			+ "WHERE "
			+ "P_ID=? "
			+ "AND STEP_NUMBER=? "),
	GET_STEP_LEVEL_RESULT("SELECT "
			+ "RESULT "
			+ "FROM "
			+ "STEP_LEVEL_REPORT "
			+ "WHERE "
			+ "P_ID=? "
			+ "AND STEP_NUMBER=? "),
	
	GET_REPORT_TABLE_START_TIME("SELECT "
			+ "START_TIME "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_TOTAL_STEPS("SELECT "
			+ "TOTAL_STEPS "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_STEPS_PASSED("SELECT "
			+ "STEPS_PASSED "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_STEPS_FAILED("SELECT "
			+ "STEPS_FAILED "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_TOTAL_EXECUTION_TIME("SELECT "
			+ "TOTAL_EXECUTION_TIME "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_RESULT("SELECT "
			+ "RESULT "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_BUILD("SELECT "
			+ "BUILD "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_CONTENT_VERSION("SELECT "
			+ "START_TIME "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_O_COOKIE("SELECT "
			+ "START_TIME "
			+ "FROM "
			+ "REPORT_TABLE "
			+ "WHERE "
			+ "P_ID=? "),
	GET_REPORT_TABLE_RESULT_BY_TESTNAME("SELECT TR.BROWSER, TR.BROWSER_VERSION, TR.OS, RT.RESULT FROM REPORT_TABLE RT JOIN THREADS TR ON RT.P_ID=TR.P_ID WHERE TR.TESTNAME=? ORDER BY TR.TESTNAME, TR.BROWSER, TR.BROWSER_VERSION, TR.OS, RT.START_TIME"),
	GET_REPORT_TABLE_RESULT_BY_PID("SELECT RESULT FROM REPORT_TABLE WHERE P_ID=?"),
		
	GET_REPORT_CONTENT_VERSION("SELECT DISTINCT CONTENT_VERSION FROM REPORT_TABLE WHERE BUILD <> 'N/A'"),
	GET_REPORT_O_COOKIE("SELECT DISTINCT O_COOKIE FROM REPORT_TABLE WHERE BUILD <> 'N/A'");
	
	private String sql;
	
	private QueryVars(String sql){
		this.sql = sql;
	}
	public String getSql(){
		return this.sql;
	}
	public static QueryVars getQueryType(String type){
		for(QueryVars tp: QueryVars.values()){
			if(tp.name().equalsIgnoreCase(type)) return tp;
		}
		return null;
	}
}
